{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\student\\\\Desktop\\\\Full Stack Todo List\\\\todo-front\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles.css';\nimport axios from 'axios';\nimport UserService from '../service/UserService';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar showInput = false;\n\nfunction LoginForm() {\n  _s();\n\n  async function signInClick() {\n    const username = document.getElementById('input-username').value;\n    const pwd = document.getElementById('input-password').value;\n    var result;\n    var response = await UserService.checkUser(username, pwd);\n    return response;\n  }\n\n  let navigate = useNavigate();\n\n  const routeChange = () => {\n    navigate('/logged');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \".App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"style-header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input-username\",\n        placeholder: \"Username\",\n        className: \"input-username input-basic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input-password\",\n        type: 'password',\n        placeholder: \"Password\",\n        className: \"input-password input-basic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: async () => {\n          signInClick().then(response => {\n            if (response == 'error' || response.data == false) {\n              if (document.getElementById('error').classList.contains('hidden')) document.getElementById('error').classList.remove('hidden');\n              document.getElementById('error').classList.add('visible');\n            } else {\n              if (document.getElementById('error').classList.contains('visible')) document.getElementById('error').classList.remove('visible');\n              document.getElementById('error').classList.add('hidden');\n              localStorage.setItem('isLogged', 'true');\n              routeChange();\n            }\n          });\n        },\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"error\",\n        className: \"hidden error-message\",\n        children: \"Invalid username or password!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/student/Desktop/Full Stack Todo List/todo-front/src/components/LoginForm.js"],"names":["React","useState","axios","UserService","useNavigate","showInput","LoginForm","signInClick","username","document","getElementById","value","pwd","result","response","checkUser","navigate","routeChange","then","data","classList","contains","remove","add","localStorage","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,IAAIC,SAAS,GAAG,KAAhB;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEnB,iBAAeC,WAAf,GAA6B;AAC3B,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA3D;AACA,UAAMC,GAAG,GAAGH,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAAtD;AACA,QAAIE,MAAJ;AACA,QAAIC,QAAQ,GAAG,MAAMX,WAAW,CAACY,SAAZ,CAAsBP,QAAtB,EAAgCI,GAAhC,CAArB;AACA,WAAOE,QAAP;AACD;;AAED,MAAIE,QAAQ,GAAGZ,WAAW,EAA1B;;AACA,QAAMa,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAC,SAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,EAAE,EAAC,gBAAV;AAA2B,QAAA,WAAW,EAAC,UAAvC;AAAkD,QAAA,SAAS,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,EAAE,EAAC,gBAAV;AAA2B,QAAA,IAAI,EAAE,UAAjC;AAA6C,QAAA,WAAW,EAAC,UAAzD;AAAoE,QAAA,SAAS,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,YAAY;AACpDT,UAAAA,WAAW,GAAGW,IAAd,CAAoBJ,QAAD,IAAc;AAC/B,gBAAIA,QAAQ,IAAI,OAAZ,IAAuBA,QAAQ,CAACK,IAAT,IAAiB,KAA5C,EAAmD;AACjD,kBAAIV,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCU,SAAjC,CAA2CC,QAA3C,CAAoD,QAApD,CAAJ,EACEZ,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCU,SAAjC,CAA2CE,MAA3C,CAAkD,QAAlD;AACFb,cAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCU,SAAjC,CAA2CG,GAA3C,CAA+C,SAA/C;AACD,aAJD,MAIO;AACL,kBAAId,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCU,SAAjC,CAA2CC,QAA3C,CAAoD,SAApD,CAAJ,EACEZ,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCU,SAAjC,CAA2CE,MAA3C,CAAkD,SAAlD;AACFb,cAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCU,SAAjC,CAA2CG,GAA3C,CAA+C,QAA/C;AACAC,cAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,MAAjC;AACAR,cAAAA,WAAW;AACZ;AACF,WAZD;AAaD,SAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAmBE;AAAI,QAAA,EAAE,EAAC,OAAP;AAAe,QAAA,SAAS,EAAC,sBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAxCQX,S;UAUQF,W;;;KAVRE,S;AA0CT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './styles.css'\r\nimport axios from 'axios';\r\nimport UserService from '../service/UserService';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nvar showInput = false;\r\n\r\nfunction LoginForm() {\r\n\r\n  async function signInClick() {\r\n    const username = document.getElementById('input-username').value;\r\n    const pwd = document.getElementById('input-password').value;\r\n    var result;\r\n    var response = await UserService.checkUser(username, pwd);\r\n    return response;\r\n  }\r\n\r\n  let navigate = useNavigate();\r\n  const routeChange = () => {\r\n    navigate('/logged');\r\n  }\r\n\r\n  return (\r\n    <div className='.App'>\r\n      <div className='main'>\r\n        <header className='style-header'>Login</header>\r\n        <input id='input-username' placeholder='Username' className='input-username input-basic'></input>\r\n        <input id='input-password' type={'password'} placeholder='Password' className='input-password input-basic'></input>\r\n        <button className='login-button' onClick={async () => {\r\n          signInClick().then((response) => {\r\n            if (response == 'error' || response.data == false) {\r\n              if (document.getElementById('error').classList.contains('hidden'))\r\n                document.getElementById('error').classList.remove('hidden');\r\n              document.getElementById('error').classList.add('visible');\r\n            } else {\r\n              if (document.getElementById('error').classList.contains('visible'))\r\n                document.getElementById('error').classList.remove('visible');\r\n              document.getElementById('error').classList.add('hidden');\r\n              localStorage.setItem('isLogged', 'true');\r\n              routeChange();\r\n            }\r\n          });\r\n        }}>Sign in</button>\r\n        <h1 id='error' className='hidden error-message'>Invalid username or password!</h1>\r\n      </div >\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}