{"ast":null,"code":"import './ReactDeleteRow.css';\nimport React, { useState } from 'react';\n\nconst ReactDeleteRow = _ref => {\n  let {\n    data,\n    className,\n    iconClassName,\n    children,\n    deleteElement = 'X',\n    delay = 300,\n    onDelete,\n    onDeleteComplete\n  } = _ref;\n  const [toDelete, setToDelete] = useState();\n  const [isDeleted, setIsDeleted] = useState();\n  return React.createElement(React.Fragment, null, !isDeleted && React.createElement(\"tr\", {\n    className: className + (toDelete ? ' fade' : '')\n  }, children, React.createElement(\"td\", null, React.createElement(\"button\", {\n    type: 'button',\n    className: 'btn',\n    onClick: ev => {\n      if (onDelete && onDelete(data)) {\n        setToDelete(true);\n        setTimeout(function () {\n          setIsDeleted(true);\n          onDeleteComplete && onDeleteComplete(data);\n        }, delay);\n      }\n    }\n  }, React.createElement(\"span\", {\n    className: iconClassName\n  }, deleteElement)))));\n};\n\nexport default ReactDeleteRow;","map":{"version":3,"mappings":"AAAA,OAAO,sBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAaA,MAAMC,cAAc,GAAG,QASK;AAAA,MATJ;AACpBC,QADoB;AAEpBC,aAFoB;AAGpBC,iBAHoB;AAIpBC,YAJoB;AAKpBC,iBAAa,GAAG,GALI;AAMpBC,SAAK,GAAG,GANY;AAOpBC,YAPoB;AAQpBC;AARoB,GASI;AAE1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,EAA1C;AAEA,SACED,0CACE,CAACa,SAAD,IACAb;AAAII,aAAS,EAAEA,SAAS,IAAIO,QAAQ,GAAG,OAAH,GAAa,EAAzB;AAAxB,KACIL,QADJ,EAEEN,gCACEA;AAAQe,QAAI,EAAC,QAAb;AAAsBX,aAAS,EAAC,KAAhC;AACEY,WAAO,EAAGC,EAAD,IAAsC;AAE7C,UAAIR,QAAQ,IAAIA,QAAQ,CAACN,IAAD,CAAxB,EAAgC;AAE9BS,mBAAW,CAAC,IAAD,CAAX;AAEAM,kBAAU,CAAC;AAETJ,sBAAY,CAAC,IAAD,CAAZ;AAGAJ,0BAAgB,IAAIA,gBAAgB,CAACP,IAAD,CAApC;AACD,SANS,EAMPK,KANO,CAAV;AAOD;AACF;AAfH,KAgBER;AAAMI,aAAS,EAAEC;AAAjB,KACIE,aADJ,CAhBF,CADF,CAFF,CAFF,CADF;AA+BD,CA7CD;;AA+CA,eAAeL,cAAf","names":["React","useState","ReactDeleteRow","data","className","iconClassName","children","deleteElement","delay","onDelete","onDeleteComplete","toDelete","setToDelete","isDeleted","setIsDeleted","type","onClick","ev","setTimeout"],"sources":["C:\\Users\\student\\Desktop\\Full Stack Todo List\\todo-front\\node_modules\\react-delete-row\\src\\ReactDeleteRow.tsx"],"sourcesContent":["import './ReactDeleteRow.css';\nimport React, { useState } from 'react';\n\ntype ReactDeleteRowProps = {\n  data: any,\n  className?: string,\n  iconClassName?: string,\n  delay?: number,\n  children?: React.ReactNode,\n  deleteElement?: React.ReactNode,\n  onDelete?: (data: any) => boolean,\n  onDeleteComplete?: (data: any) => void,\n};\n\nconst ReactDeleteRow = ({\n    data,\n    className,\n    iconClassName,\n    children,\n    deleteElement = 'X',\n    delay = 300,\n    onDelete,\n    onDeleteComplete\n  }: ReactDeleteRowProps) => {\n  // Define state.\n  const [toDelete, setToDelete] = useState<boolean>();\n  const [isDeleted, setIsDeleted] = useState<boolean>();\n\n  return (\n    <>\n    { !isDeleted && (\n      <tr className={className + (toDelete ? ' fade' : '')}>\n        { children }\n        <td>\n          <button type='button' className='btn'\n            onClick={(ev: React.MouseEvent<HTMLElement>) => {\n              // Call the prop event handler for onDelete and check result.\n              if (onDelete && onDelete(data)) {\n                // Mark row to fade out.\n                setToDelete(true);\n                // Remove row from DOM after fade is complete.\n                setTimeout(function() {\n                  // Remove row from DOM.\n                  setIsDeleted(true);\n\n                  // Call prop event handler for onDeleteComplete.\n                  onDeleteComplete && onDeleteComplete(data);\n                }, delay);\n              }\n            }}>\n            <span className={iconClassName}>\n              { deleteElement }\n            </span>\n          </button>\n        </td>\n      </tr>\n    ) }\n    </>\n  );\n};\n\nexport default ReactDeleteRow;"]},"metadata":{},"sourceType":"module"}